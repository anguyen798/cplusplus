WEBVTT

0
00:00.730 --> 00:06.490
Let us write a program for checking whether the number is perfect number or not.

1
00:06.490 --> 00:07.950
What is perfect number.

2
00:08.020 --> 00:10.270
I'll explain you afterwards.

3
00:10.270 --> 00:14.960
In the previous video we have seen factors of a number.

4
00:15.040 --> 00:20.030
First of all I will show you how to find sum of the factors of a number.

5
00:20.440 --> 00:21.510
What does it mean.

6
00:21.520 --> 00:25.350
I want to add the factors one plus two plus four plus eight.

7
00:25.390 --> 00:27.940
I want to add all these factors.

8
00:27.940 --> 00:30.970
First of all let us learn how to add them.

9
00:31.030 --> 00:32.430
Then I will show you a perfect number.

10
00:33.100 --> 00:37.740
So how to add means for adding all these I should have one more variable.

11
00:37.750 --> 00:39.090
What does that sum.

12
00:39.110 --> 00:42.520
I will take sum initiative zero.

13
00:42.640 --> 00:47.580
What I should do this is 0 plus 1, result is one.

14
00:47.590 --> 00:52.040
Next time when I'm adding sum is 1 plus 2 It is 3.

15
00:52.300 --> 00:55.300
Then here no need to add, and then 4 is a factor.

16
00:55.330 --> 00:59.260
So I add it so three plus four is seven.

17
00:59.260 --> 01:01.210
Then don't add don't add don't add.

18
01:01.210 --> 01:02.380
Here again added.

19
01:02.410 --> 01:08.290
So what with the last digit of sum, sum plus eight is 15.

20
01:08.350 --> 01:12.220
So this how I can add the factor of a number.

21
01:12.250 --> 01:20.680
So here is what I should write down sum assign some plus i,  this what I should do so instead of printing

22
01:20.680 --> 01:22.510
the numbers I have added them.

23
01:22.510 --> 01:26.560
So now you're already familiar with this I don't have to explain.

24
01:26.560 --> 01:29.400
Now here there's no flowchart.

25
01:29.470 --> 01:33.160
Already we have seen the flow chart in the previous program as a continuation of that.

26
01:33.580 --> 01:39.330
So you have to develop the flow chart. so  it's like your homework.

27
01:39.340 --> 01:42.550
Because if I draw a flow chart and explain and become very complex.

28
01:42.550 --> 01:47.260
So we have already learned sufficient flow charts not directly, let us write the program.

29
01:47.470 --> 01:48.830
So come to this side.

30
01:48.910 --> 01:52.510
See this portion till here.

31
01:52.630 --> 01:57.220
I was printing here earlier right, so  printing and adding so everything was there so everything

32
01:57.220 --> 01:58.590
was as it is here.

33
01:58.600 --> 02:01.640
I was printing so for print I was using C out.

34
02:01.660 --> 02:04.530
I, now this time I don't have to cout i.

35
02:04.780 --> 02:05.670
I have to add them.

36
02:05.680 --> 02:07.440
So for that I have taken one more variable sum

37
02:07.440 --> 02:14.870
I should say sum assign sum plus i, that's it.

38
02:14.890 --> 02:20.500
So this is inside If so this end of for loop will give the sum of all these factors.

39
02:20.500 --> 02:33.280
If you want to print you can say cout sum of factors is sum you can display this some will be displayed

40
02:33.840 --> 02:34.520
that's it.

41
02:34.870 --> 02:39.960
So this will become a program for finding the sum of the factors of a number.

42
02:40.000 --> 02:47.920
You can try this one right there is a coding exercise available for this so you can complete it. now coming

43
02:47.920 --> 02:49.360
to perfect number.

44
02:49.360 --> 02:52.180
So actually we are going to find out what is a perfect number.

45
02:52.220 --> 02:59.460
No I can explain you see what is the sum for all factors of 8 it is 15.

46
02:59.530 --> 03:04.550
How is the number 8, 2*8 is how much 16.

47
03:05.050 --> 03:07.430
But the number we got is 15.

48
03:07.450 --> 03:12.480
So double that number is equal to the sum of the factors of a number.

49
03:12.520 --> 03:16.510
No it's not a fact it's not a perfect number.

50
03:16.790 --> 03:30.290
Then if I take 6 one of the factors of 6: 1 2 3 and 6 add them 12, so 2 x 6 is also 12.

51
03:30.370 --> 03:37.450
See this is the sum of the factors of 6 and this is double the number 6.

52
03:37.600 --> 03:44.140
So if the sum of the factors of a number is a double the number then it is perfect number that's the

53
03:44.140 --> 03:45.230
definition.

54
03:45.400 --> 03:51.040
If the sum of the factor for a number is double the number then it is the perfect number.

55
03:51.330 --> 03:56.800
So for checking a number is perfect or not First of all they should have the sum of the factor.

56
03:56.830 --> 03:59.340
So that's what already we have done.

57
03:59.710 --> 04:04.930
Now instead of printing the sum I have to say whether the perfect number or not.

58
04:05.310 --> 04:07.840
So I removed that and I will write down the condition.

59
04:07.850 --> 04:17.950
Well let us say a condition here after finding sum I should check if two into number the number double

60
04:17.950 --> 04:20.830
the number is equal to sum.

61
04:21.160 --> 04:24.950
If it is equal to sum we will print cout.

62
04:25.160 --> 04:25.760
Perfect.

63
04:25.770 --> 04:26.530
No.

64
04:28.250 --> 04:29.190
Right.

65
04:29.230 --> 04:32.230
else,  if it is not equal.

66
04:32.230 --> 04:33.850
Then cout.

67
04:33.940 --> 04:34.880
Not a perfect

68
04:34.880 --> 04:35.560
No.

69
04:36.310 --> 04:36.790
Right.

70
04:36.790 --> 04:39.070
Not perfect.

71
04:39.070 --> 04:39.640
No.

72
04:40.000 --> 04:41.090
That's all.

73
04:41.110 --> 04:42.030
This is so simple.

74
04:43.740 --> 04:46.140
So earlier I have just printed the sum.

75
04:46.140 --> 04:51.990
No I'm checking or double the number is equal to sum see this has to be done after this loop right

76
04:52.380 --> 04:53.340
after the for loop.

77
04:53.890 --> 04:56.790
So afterwards check weather they are equal.

78
04:56.790 --> 04:58.410
If so print this one.

79
04:58.420 --> 05:02.220
See I'm not writing flower bracket because these are single lines only.

80
05:02.400 --> 05:06.690
So that's all, this is a program for finding a perfect number.

81
05:07.200 --> 05:12.420
So there is a coding excercise available even our demo is also available so finished recording exercise

82
05:12.510 --> 05:16.070
and also write the program complete program by yourself.

83
05:16.080 --> 05:17.850
Take the help of demo if you need.

84
05:18.420 --> 05:19.960
So that's all in this video.

85
05:19.980 --> 05:21.530
Now in next video.

86
05:21.600 --> 05:25.320
Again the similar logic, again to similar logic.

87
05:25.480 --> 05:27.900
Changes will make it as a new program.

88
05:28.320 --> 05:31.160
So let us move to next topic.