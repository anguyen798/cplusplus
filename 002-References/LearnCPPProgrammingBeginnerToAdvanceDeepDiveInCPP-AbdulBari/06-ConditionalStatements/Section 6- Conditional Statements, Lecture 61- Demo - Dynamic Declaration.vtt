WEBVTT

0
00:00.210 --> 00:07.410
C++ allows declaration of variables wherever you like you can declare them instantly wherever you are

1
00:07.410 --> 00:13.290
using them whereas in C language we we're supposed to declare all the variables in the beginning of

2
00:13.290 --> 00:16.780
a program like Suppose I NEED A B C D.

3
00:16.830 --> 00:21.090
All the variables must be declared at one place but in C++.

4
00:21.100 --> 00:26.140
Suppose I have A variable and B.

5
00:26.460 --> 00:33.830
And I also need C and I have to find sum of them in B and store the rather than c then that requires if

6
00:33.920 --> 00:36.960
suppose inside some conditional statement.

7
00:37.370 --> 00:48.210
I just write true here on here if I need C then I can declare c heal itself and store the result of a

8
00:48.210 --> 00:52.030
and b in this one and cout C.

9
00:52.570 --> 00:59.790
now this C is declared inside if and it will remain only through out this block.

10
00:59.850 --> 01:07.960
So in C++ the scope or the visibility of the variables is limited to the block in which they are declared.

11
01:08.220 --> 01:11.270
Let me try to access a C variable here.

12
01:11.280 --> 01:17.450
I will say C out C,  endl let us see what happens.

13
01:17.490 --> 01:18.690
see its an error.

14
01:18.750 --> 01:22.280
Use of undeclared identifier.

15
01:22.350 --> 01:25.520
See you can see this message is appearing here.

16
01:25.530 --> 01:26.600
Error message.

17
01:26.650 --> 01:32.250
So compiler is giving an error message that c is not declared and I'm trying to use a C.

18
01:32.310 --> 01:39.640
So this means that the life of C variable has finished here by the end of this block.

19
01:40.830 --> 01:44.990
I'll just run the program and see what it happens.

20
01:45.900 --> 01:54.250
Yeah 15 it is displaying the sum off a and b that is stored in C. I will remove these things.

21
01:54.260 --> 01:56.560
I'll show you one more.

22
01:56.560 --> 02:01.710
Suppose I want a variable c in that I want to store the sum of A and B.

23
02:01.850 --> 02:07.530
And here I want to check the condition C is greater than 10 or not.

24
02:07.540 --> 02:09.800
This is the condition. now this condition

25
02:09.820 --> 02:15.850
I have written based on this variable that is C which I have stored the result of a and b here.

26
02:16.040 --> 02:21.330
So I need a variable c only for checking the condition and entering into this loop.

27
02:21.370 --> 02:26.190
And after this if I don't require c here suppose I don't need see here after.

28
02:26.230 --> 02:33.190
If I have declared this C only for using it as a condition or inside this if block.

29
02:33.280 --> 02:35.110
I want see with in here only.

30
02:35.720 --> 02:43.270
But in this example I must declare c before if then only I can use it in the condition.

31
02:43.300 --> 02:49.760
though I don't want c through out the program but when I have written it here it will be visible through out  the program.

32
02:49.900 --> 02:53.040
Now how to limit this C with in this if block.

33
02:53.200 --> 02:55.090
There are two methods.

34
02:55.120 --> 02:56.420
See one method is.

35
02:56.440 --> 03:06.530
I can make a empty blocks here and close like this now this will  be visible only in this block.

36
03:06.760 --> 03:13.140
After this if I have to say cout  c, let us see what happens.

37
03:13.420 --> 03:17.010
See uss of undeclared identifier c.

38
03:17.140 --> 03:20.400
So C is visible only in this block.

39
03:20.530 --> 03:28.140
So if you want to limit the visibility of some variables then you can simply put a emptyblock.

40
03:28.390 --> 03:34.780
Now one more method I will show you how to use this variable to a limited scope.

41
03:34.780 --> 03:36.910
I will declare this variable c

42
03:40.060 --> 03:41.610
inside if.

43
03:42.430 --> 03:47.070
Yes you heard it right, I will declare it inside if.

44
03:47.140 --> 03:48.160
Is it allowed.

45
03:48.250 --> 03:52.160
Just like if you know in for loop we can declare the variable like this.

46
03:52.380 --> 03:53.540
And inside if

47
03:53.560 --> 03:55.570
Also I can declare the variable like this.

48
03:55.570 --> 03:59.900
This is allowed from C++ 17 onwards.

49
03:59.920 --> 04:04.960
This type of expression are allowed from c++ 17 onwards.

50
04:05.110 --> 04:08.960
So this will be limited only to this if block.

51
04:09.250 --> 04:14.380
So if you have any variable declarations that are limited for this conditional statements so you can

52
04:14.380 --> 04:20.020
declare them as a part of if statement only.

53
04:20.120 --> 04:21.740
This is an interesting feature.