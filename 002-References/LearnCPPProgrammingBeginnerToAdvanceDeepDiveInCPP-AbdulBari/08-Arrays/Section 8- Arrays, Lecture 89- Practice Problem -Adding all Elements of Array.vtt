WEBVTT

0
00:00.800 --> 00:08.500
Let us write the program for finding the sum of all the elements in an array .we want to add all elements

1
00:08.740 --> 00:09.660
suppose example,

2
00:09.670 --> 00:17.680
We have an array here of size of 7. indices are from 0 to 6 and these are the elements I want to add all

3
00:17.680 --> 00:17.980
of them.

4
00:18.820 --> 00:21.750
So first element and next then next then next.

5
00:21.750 --> 00:26.260
So this type of logic we have already seen adding the numbers one by one.

6
00:26.260 --> 00:26.830
We have done it.

7
00:26.830 --> 00:31.180
Sum of the digits we have learn it and sum of first n natural numbers.

8
00:31.180 --> 00:37.180
Same thing only so for that we were taking sum variables so I will take a variable sum here.

9
00:37.180 --> 00:46.370
So let us take sum, and initially sum is zero then, I have to add all the elements so for how we can

10
00:46.370 --> 00:52.160
go through all those elements 1 by 1,  0 1 2 3 4, counter,

11
00:52.310 --> 00:58.560
This will take us to all elements so if I say A[i] then A[0] is for 4, A[1] is what, 8.

12
00:58.640 --> 01:00.940
So I have written all those elements.

13
01:01.300 --> 01:02.440
Now we want sum.

14
01:02.630 --> 01:12.450
So in that sum 0 plus 4 is 4, then that 4 plus 8 is 12.

15
01:12.680 --> 01:16.210
And that 12 plus 6 is 18.

16
01:16.220 --> 01:24.020
So in this way I can add, 18 plus nine is twenty seven and twenty seven plus five is thirty two

17
01:24.410 --> 01:33.390
thirty two plus two is thirty four and thirty four plus seven is forty one, in this way we can add. so every

18
01:33.390 --> 01:38.150
time this value is taken and 8 is added, this value is taken and six is added.

19
01:38.300 --> 01:47.480
So this procedure you already know this is some assign some plus what? this A[i].

20
01:47.720 --> 01:54.850
Okay A[i],  this will add all the elements so this is statement is adding and the result is

21
01:54.890 --> 01:58.140
in variable sum, so let us write a program for it.

22
01:58.370 --> 02:03.890
So already I have main function, I have an array and it is declared and initialized with those set of

23
02:03.890 --> 02:08.480
numbers, and  I have n that is size of an array and sum is also there.

24
02:08.780 --> 02:11.680
So A n sum,  and I.

25
02:11.960 --> 02:13.480
These are the variables that I declare.

26
02:13.550 --> 02:17.690
Again I repeat A, n,  sum and i. i I did not declare it.

27
02:17.990 --> 02:19.280
Let us do it now.

28
02:19.460 --> 02:23.750
See for accessing all the elements one by one we need to for loop.

29
02:23.900 --> 02:26.090
So yes these are the steps.

30
02:26.090 --> 02:35.660
This has to be done in for loop by repeating steps so for loop, for Integer i assign zero.

31
02:36.170 --> 02:41.380
So you know very well that is a dynamic declaration I can declare the variable anywhere in C++ program.

32
02:41.540 --> 02:42.790
So I start from zero.

33
02:42.800 --> 02:49.440
How long it should continue, I is less than 7 means it should stop at 6.

34
02:49.700 --> 02:56.180
Then every time I++, so this loop will take me through all these statements.

35
02:56.180 --> 03:01.110
The next what I have to do inside, add these elements.

36
03:01.120 --> 03:11.410
And so just here I have single statement that is sum  assign sum plus A[i] that's all.

37
03:12.350 --> 03:15.380
Only one thing I have to do go on adding all the elements so.

38
03:15.410 --> 03:20.780
So this will get all the elements added in sum.  now outside this, print

39
03:20.930 --> 03:29.400
The output Cout sum is variable sum. 

40
03:30.190 --> 03:34.300
So it is a message that will print on the screen and this is the variable name.

41
03:34.670 --> 03:38.810
Then here return zero, end of main function.

42
03:39.110 --> 03:43.510
So this is a simple program for sum of all elements you have in an array.

43
03:44.510 --> 03:45.790
So that's all in this video.

44
03:45.800 --> 03:49.730
There is a coding exercise available, there you have to write down this portion only.

45
03:50.060 --> 03:51.600
And one more thing.

46
03:51.770 --> 03:54.620
There is a demo available, watch that demo.

47
03:54.650 --> 03:58.370
right the complete program by yourself on your P.C. right.

48
03:58.850 --> 04:02.810
So practise this program that's all in this video will see more programs on arrays.