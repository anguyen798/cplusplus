WEBVTT

0
00:00.420 --> 00:07.000
Let us look at nested for loop usually these are useful for accessing multi-dimensional arrays that is 2-D

1
00:07.080 --> 00:09.400
arrays or matrices

2
00:09.750 --> 00:13.380
So let me write for loop, see commonly we write for loop.

3
00:13.380 --> 00:17.910
Just one for loop but now I am writing two for loops I assign zero.

4
00:18.180 --> 00:30.510
I is less than three and a plus plus, and for integer j assigned zero J is less than three and j plus

5
00:30.510 --> 00:32.010
plus.

6
00:32.010 --> 00:33.470
Now how this works.

7
00:33.720 --> 00:42.170
So what I do is I will say Cout I and j, and endl.

8
00:43.470 --> 00:47.030
So let us understand how this works and what other values are displayed.

9
00:47.040 --> 00:57.120
When I say Cout i, j.  see I and j are two values initially first i is 0, 0 is less than three yes

10
00:57.330 --> 00:58.940
enter inside  again.

11
00:58.950 --> 01:04.360
J assign zero, in j is less than 3 Yes.

12
01:04.380 --> 01:11.230
Then print  i j, so what is printed first 0 0 then it will go up J pluss plus.

13
01:11.250 --> 01:16.860
J becomes 1 then J is less than three yes enter inside again print.

14
01:16.900 --> 01:24.640
i J What is i, still Z only, so it will print 0 1 the next J plus plus J becomes 2 and I will still

15
01:24.630 --> 01:33.590
zero and 2 is less than 3 so to enter inside and print i j, that is 0 2 then j++ j becomes

16
01:33.650 --> 01:35.390
3.

17
01:35.580 --> 01:38.790
Now j is not less than 3 is equal to 3.

18
01:38.820 --> 01:45.240
So nothing is done so it will come out of this for loop and still it is inside outer for loop I plus

19
01:45.240 --> 01:50.630
plus so I becomes one, 1 is less than 3 enter inside.

20
01:50.770 --> 01:56.410
Initially again J loop starts, again the loop starts and J becomes 0.

21
01:56.550 --> 02:04.970
Now again J becomes evil so it will print this then 1 1 1 2 then 1 3 it will not bring this and this

22
02:05.020 --> 02:06.860
was 0.

23
02:07.040 --> 02:18.340
then again i becomes 2, so two zero, two one, two two, and two three will not be printed then this will become 3 and it will stop

24
02:18.360 --> 02:23.760
So these are the values printed so if you see this how it has taken the values it is just like

25
02:23.890 --> 02:37.410
two dimensional array, see 0 1 2 and 0 1 2 This location is 00 01 02 then 10  11 12

26
02:37.410 --> 02:44.550
20 21 22.

27
02:44.600 --> 02:50.580
In this way nested for loop will generate the indices for 2D array  where I will act as

28
02:50.830 --> 02:59.130
a row index and j will act as a column index, so mostly 2d array oe when we write any application

29
02:59.130 --> 03:06.360
on matrixes,we use nested for loops, particularly i will show a lot of things using the Neted for loop

30
03:06.360 --> 03:08.760
and also I'll give you some exercises.