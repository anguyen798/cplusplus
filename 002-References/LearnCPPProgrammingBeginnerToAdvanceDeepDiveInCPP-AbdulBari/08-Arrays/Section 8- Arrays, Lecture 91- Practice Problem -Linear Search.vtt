WEBVTT

0
00:00.570 --> 00:03.770
In this video we learn about linear search.

1
00:03.900 --> 00:05.780
Actually there are two search methods.

2
00:05.790 --> 00:07.170
First one is a linear search.

3
00:07.170 --> 00:11.280
Second one is binary search, that I will cover in the next video.

4
00:11.280 --> 00:15.220
So let us understand what is linear search. first thing,

5
00:15.390 --> 00:21.370
Searching searching is a process of finding the location of an element.

6
00:21.820 --> 00:23.150
So look at here.

7
00:23.160 --> 00:28.270
I have a list of elements so we know well that list of elements are stored in the array.

8
00:28.520 --> 00:32.090
Yes they are stored in an arrays of size 10 and then this 10 here.

9
00:32.970 --> 00:36.290
And in this I want the search for element.

10
00:36.360 --> 00:41.190
So searching element is usually called as a key, we say we're searching for this key 12.

11
00:42.030 --> 00:45.330
So 12 key I already know what I have to find out.

12
00:45.330 --> 00:47.900
I have to find out where it is. I know 12,

13
00:48.010 --> 00:50.450
but where it is, I want to find out.

14
00:50.580 --> 00:52.610
So inside this, where is 12.

15
00:52.830 --> 00:53.640
So 12

16
00:53.640 --> 00:54.530
is found here.

17
00:54.570 --> 00:55.090
Yes.

18
00:55.230 --> 00:57.290
That's what I want to find out.

19
00:57.300 --> 01:00.220
Index of that element, that is six.

20
01:00.750 --> 01:02.990
So I want location of that element.

21
01:03.270 --> 01:05.950
That's what searching is, now.

22
01:06.000 --> 01:08.900
First method, that is linear search.

23
01:08.970 --> 01:10.080
What is the search method.

24
01:10.080 --> 01:12.180
How it works.

25
01:12.230 --> 01:15.380
See suppose you have some books in a shelf in rack.

26
01:15.440 --> 01:16.390
They are not sorted.

27
01:16.410 --> 01:17.140
They are not sorted.

28
01:17.160 --> 01:18.500
You are searching for a book.

29
01:18.600 --> 01:23.980
So you have to look at the books one by one until you find that element or find a book that you are

30
01:23.980 --> 01:24.910
searching for.

31
01:25.070 --> 01:27.050
So same process we will adopt here.

32
01:27.100 --> 01:32.430
That is linear search, that is linear search, 12 so for finding 12 i will start from here

33
01:32.850 --> 01:34.440
checking the element one by one.

34
01:34.440 --> 01:35.030
Is it twelve.

35
01:35.090 --> 01:35.520
No.

36
01:35.550 --> 01:36.330
Is it 12.

37
01:36.360 --> 01:36.750
No.

38
01:36.770 --> 01:37.320
Is it 12.

39
01:37.580 --> 01:39.740
No no no no.

40
01:39.750 --> 01:40.930
Yes it is found.

41
01:41.460 --> 01:42.610
So we stop here.

42
01:43.050 --> 01:48.560
Once we got the elements, search is successful and we stop. we got the index six.

43
01:48.570 --> 01:49.810
This is the search method.

44
01:50.370 --> 01:53.940
So for searching that I have to compare all the elements one by one.

45
01:54.060 --> 01:56.730
until i reach that element.

46
01:56.770 --> 01:58.350
Now I'll take one more key element.

47
01:58.380 --> 01:59.670
Let us see suppose,

48
01:59.700 --> 02:03.920
I want to search for a key element that is 35.

49
02:04.590 --> 02:05.890
Let us search for it.

50
02:06.070 --> 02:06.760
35.

51
02:06.780 --> 02:07.890
No it's not 35.

52
02:07.940 --> 02:09.800
No no no no no.

53
02:10.170 --> 02:11.190
I have reached the end.

54
02:11.880 --> 02:15.980
So I have reached the elements elements are finished and I did not get the element.

55
02:16.080 --> 02:18.090
So search is unsuccessful.

56
02:18.410 --> 02:20.160
And I did not find that element.

57
02:20.280 --> 02:21.020
So here.

58
02:21.140 --> 02:25.970
Search was successful and the index found was 6.

59
02:25.980 --> 02:27.710
And here it is unsuccessful.

60
02:28.770 --> 02:34.190
So search may be successful or unsuccessful so depending on the key that you are searching it be found.

61
02:34.190 --> 02:35.020
It may not be fun.

62
02:35.430 --> 02:36.750
So it's a simple procedure.

63
02:37.080 --> 02:41.690
So let us write a C++ program for that one. now here

64
02:41.700 --> 02:44.430
Already you have written a few things right.

65
02:44.430 --> 02:47.080
Let us learn about these things right.

66
02:47.190 --> 02:49.250
I have something new to show you here.

67
02:49.290 --> 02:49.610
See.

68
02:49.740 --> 02:54.190
I have taken an array of size 10 and n is also 10.

69
02:54.520 --> 02:59.350
Here if you want to take a bigger size array you can take any size 10,20,30,40

70
02:59.560 --> 03:00.160
100.

71
03:00.180 --> 03:02.200
Any size you can take.

72
03:02.250 --> 03:06.600
And here I have not initialized an array, so in the previous programs.

73
03:06.600 --> 03:11.640
If you see, I was directly storing the elements I was initializing the array, here I'm not initializing

74
03:12.030 --> 03:16.160
I'm taking all the elements from keyboard as input from the user.

75
03:16.170 --> 03:23.210
So for that I have given a message enter numbers, now using for loop and cin I'm reading on the elements

76
03:23.370 --> 03:24.410
so we know well that.

77
03:24.500 --> 03:28.310
How to scan all the locations of an array using for loop.

78
03:28.320 --> 03:35.050
You can scan all the locations from the previous examples we have displayed the array  and found the sum of all

79
03:35.050 --> 03:36.600
the elements but not this time

80
03:36.750 --> 03:39.400
We are eating the elements from the keyboard and reads an array

81
03:39.690 --> 03:42.200
So suppose these values are coming from the keyboard.

82
03:42.240 --> 03:46.320
So if you run this program you'll have to enter the values of six eleven twenty five.

83
03:46.320 --> 03:48.860
So on you have to enter all the values.

84
03:49.020 --> 03:54.360
Then next thing after taking all these elements here I'm taking key also.

85
03:54.390 --> 03:55.660
What do you want to search.

86
03:55.710 --> 04:00.750
After giving the elements then you can give a search key so key may be present in this one may not be

87
04:00.750 --> 04:03.210
present in this one, so if it is present we should get the index.

88
04:03.210 --> 04:07.370
If it is not there then we should get the message that it is not found or

89
04:07.440 --> 04:08.450
it is unsuccessful.

90
04:08.510 --> 04:09.570
so we will say not found.

91
04:10.140 --> 04:12.330
So whatever the key you like you can enter it,

92
04:12.330 --> 04:14.070
This will be taken from the keyboard.

93
04:14.170 --> 04:16.750
Now we are ready with the data as well as the key.

94
04:16.770 --> 04:21.090
No you have to perform linear search, so here i will write down a procedure for linear search.

95
04:21.090 --> 04:23.200
So let us look at what we were doing.

96
04:23.290 --> 04:26.780
We were comparing the element one by one starting from the first element.

97
04:26.790 --> 04:32.280
So it means we are scanning through an array,  so how we can scan through an array, using

98
04:32.280 --> 04:32.700
for loop

99
04:33.150 --> 04:33.540
Yes.

100
04:33.570 --> 04:35.610
Here also I will use for loop.

101
04:35.640 --> 04:37.330
So first of all I will write down the for loop.

102
04:37.350 --> 04:38.400
Then I will tell you further.

103
04:38.910 --> 04:40.910
So using for loop we will start.

104
04:41.250 --> 04:42.890
I start from zero.

105
04:42.940 --> 04:43.210
Right.

106
04:43.470 --> 04:45.390
So here I am so I should declare.

107
04:45.490 --> 04:48.560
Otherwise you can write int i here, every time you can write

108
04:48.600 --> 04:49.120
You can write.

109
04:49.220 --> 04:51.310
It's a good practice in C++.

110
04:51.380 --> 04:54.010
writing here only int i and int i.

111
04:54.320 --> 04:56.420
Anyway I have declared it out side.

112
04:57.180 --> 05:02.550
I is less than n and then I plus plus,  each time what I should do, I should check it that

113
05:02.550 --> 05:13.020
This key value is equal toA[i] if it is equal it is found so I should check if key is equals to A[i]

114
05:13.020 --> 05:13.760
equals to, comparision.

115
05:13.770 --> 05:15.080
Write A[i].

116
05:15.180 --> 05:16.030
â€¦.

117
05:16.590 --> 05:21.790
If it is equal means, key is found so I should give a message keys is found.

118
05:22.770 --> 05:25.810
So Cout give a message found.

119
05:25.950 --> 05:27.960
I will just write found.

120
05:28.060 --> 05:28.900
Found.

121
05:29.000 --> 05:30.670
At, What is the index.

122
05:30.690 --> 05:33.430
See if it is found at 6, 6 is the index.

123
05:33.440 --> 05:39.530
So here I should display 6, so that is  nothing but I. that is i.

124
05:39.540 --> 05:42.830
I so found at index 6.

125
05:42.870 --> 05:50.040
If the key is 12, that's all, then once you got the key you should stop the program.

126
05:50.280 --> 05:54.750
So here itself I will write return zero.

127
05:54.780 --> 05:56.100
So you remember.

128
05:56.150 --> 06:00.340
we are writing return zero at the end of the main function so that will stop the function.

129
06:00.350 --> 06:01.640
But anyway it's going to stop.

130
06:02.040 --> 06:08.780
So here if you write a return zero function on the main function of the program will stop next.

131
06:08.850 --> 06:09.650
This is inside.

132
06:09.690 --> 06:11.940
If only then outside this for loop

133
06:12.420 --> 06:19.860
If suppose the key is not found 35 is not there then this for loop will repeat n times and this condition

134
06:19.860 --> 06:21.010
is never true.

135
06:21.150 --> 06:24.520
It will come out of this for loop then outside.

136
06:24.530 --> 06:26.790
We have sat the same key is not found.

137
06:26.790 --> 06:27.690
So here.

138
06:27.690 --> 06:30.160
No need of checking anything see.

139
06:30.450 --> 06:31.940
Most people get confused here.

140
06:31.950 --> 06:33.190
I have to check here.

141
06:33.240 --> 06:34.650
No don't check anything.

142
06:34.680 --> 06:37.140
mostly students get confused, inside

143
06:37.140 --> 06:39.910
If there write found, else not found.

144
06:39.930 --> 06:46.230
So no not inside  for loop. see after completely checking the whole array then only you can say it's not

145
06:46.230 --> 06:46.790
found.

146
06:46.860 --> 06:51.240
So you have to come out of the for loop to say not found, so outside the for loop say not found.

147
06:51.250 --> 06:57.720
that's all. after this return statement and end of main function.

148
06:57.720 --> 07:03.850
So this portion is for linear search, this portion is linear search

149
07:04.050 --> 07:05.630
So that's all about this one.

150
07:06.720 --> 07:08.810
You have to practice this program right.

151
07:09.000 --> 07:12.450
And also there is a video that is a Demo Available For This One.

152
07:13.260 --> 07:18.090
I have written the program and execute it for execution I have shown you you can watch that in the next

153
07:18.090 --> 07:24.240
video and there is according exercise available in this you have to print the message found or not found.

154
07:24.570 --> 07:26.380
So you have to write only the for loop.

155
07:26.390 --> 07:32.530
this array and n, everything will be given so complete that coding exercise and also right

156
07:32.600 --> 07:37.400
on this complete program by yourself on your machine and practice it.

157
07:37.750 --> 07:38.340
OK.

158
07:38.550 --> 07:40.140
So you can take the program and do it.

159
07:41.280 --> 07:42.270
That's all in this video.